	var local_url = "http://localhost:8080/AjaxController/AjaxController/";	 
	var xerox_url = "http://usa0300lv312.apps.mc.xerox.com:8080/AjaxController/AjaxController/";
	var replace_url = local_url; 

$(document).ready(function() {
	
//	http://usa0300lv312.apps.mc.xerox.com:8080/MVCapproach2DB/


	loadSolutionList();
	$('#loading-component-click').hide(); //underneath component
	$('#loading-year-click').hide();
	$('#submit_first').attr('disabled', true);
	$('#Google').attr('disabled', true);
	//	$('#loading-solution-click').hide();//underneath solution

	$('#solution_param').change(function() { //this will update the component_id
		update_comp();
		// updateFormEnabled();
	});
	$('#component_param').change(function() { //this will update the month and year date
		update_year();
		// updateFormEnabled();

	});
	$('#yearparam_start').change(function() { //this will update the month
		update_month();
		// updateFormEnabled();
	});

	

	$('#monthparam_start').change(function() { //this is used to check whether or not all 4 parameters have been chosen
		// updateFormEnabled();
		if (verifyAdSettings()) { //if all 4 options have been chosen
			// console.log("before the call to displayloadingmessage");
			DisplayLoadingMessage();

		} else {
			// console.log("Not displaying google charts");
		}
	});

	$('#Submit2').click(function() {
		window.location = "http://localhost:8080/MVCapproach2DB/Second.jsp";
		
	});

	/*
	$('#submit_paragraph1').click(function() {
		//		window.location = "http://www.stackoverflow.com/";
		window.location = "http://localhost:8080/MVCapproach2DB/API_Documentation.jsp";
	});
*/

});// end of $(document).ready(function() {

/*
function drawTableOrChart(){
	var solution = $('#solution_param').val();
	var component = $('#component_param').val();
	var year = $('#yearparam_start').val();
	var month = $('#monthparam_start').val();

	var temp_url = "http://localhost:8080/AjaxController/AjaxController/Report1/";
	temp_url += solution + "/";
	temp_url += component + "/";
	temp_url += year + "/";
	temp_url += month;

	$.ajax({
		type: 'GET',
		dataType: 'json',
		url: temp_url,
		success: function(response1) {

			google.load("visualization", "1.1", {packages:["table"]});

			var data_table = new google.visualization.DataTable();
			data_table.addColumn('string', 'Date');
			data_table.addColumn('number', 'Request_Count');

			$.each(response1, function(k, v) {
				// console.log("Month is:" + v.DATE + " and request count is:" + v.REQUEST_COUNT);
				data_table.addRow([response1[k].DATE, parseInt(response1[k].REQUEST_COUNT, 10)]);
			});

			var table = new google.visualization.Table(document.getElementById('table_div'));
			table.draw(data_table, {showRowNumber: true, width: '100%', height: '100%'});

		}
	});

	$.ajax({
		type: 'GET',
		dataType: 'json',
		url: temp_url,
		success: function(response) {

			google.load('visualization', '1', { packages: ['corechart'] });	

			var data_chart = new google.visualization.DataTable();
			data_chart.addColumn('string', 'Date');
			data_chart.addColumn('number', 'Request_Count');


			$.each(response, function(k, v) {
				// console.log("Month is:" + v.DATE + " and request count is:" + v.REQUEST_COUNT);
				data_chart.addRow([response[k].DATE, parseInt(response[k].REQUEST_COUNT, 10)]);
			});
			var chart = new google.visualization.ColumnChart(document.getElementById('chartdiv'));

			var options = {
				'title': 'Request Count by Date',
				'width': 1300,
				'height': 900,
				hAxis: {
					title: 'Date'
				},
				vAxis: {
					textPosition: 'in',
					logScale: true,
					title: 'Request Count',
					minValue: 0
				},
				animation: {
					easing: 'in',
					startup: true
				},
				legend: {
					position: 'bottom',
				}
			};

			chart.draw(data_chart, options);
		}
	});

}
*/


/*
function GoogleTable(){
		var solution = $('#solution_param').val();
		var component = $('#component_param').val();
		var year = $('#yearparam_start').val();
		var month = $('#monthparam_start').val();

		var temp_url = "http://localhost:8080/AjaxController/AjaxController/Report1/";
		temp_url += solution + "/";
		temp_url += component + "/";
		temp_url += year + "/";
		temp_url += month;

		console.log("The url when you clicked on google is: " + temp_url);

		$.ajax({
			type: 'GET',
			dataType: 'json',
			url: temp_url,
			success: function(response) {
				google.load("visualization", "1.1", {
			packages: ["table"]
		});

		console.log("this is fine");
		google.setOnLoadCallback(drawTable);
				drawTable(response); // calling method  
			},
			error: function() {
				alert("Error loading data! Please try again.");
			}
		});
}*/
/*
function drawTable(dataValues) {
		console.log("inside draw table");

		

		console.log("this part is fine");	
		var data = new google.visualization.DataTable();

		data.addColumn('string', 'Date');
		data.addColumn('number', 'Request_Count');

		$.each(dataValues, function(k, v) {
			console.log("Month is:" + v.DATE + " and request count is:" + v.REQUEST_COUNT);
			data.addRow([dataValues[k].DATE, parseInt(dataValues[k].REQUEST_COUNT, 10)]);
		});
		// Instantiate and draw our chart, passing in some options  
		console.log("this part isn't fine");
		// var chart = new google.visualization.ColumnChart(document.getElementById('chartdiv'));
		var table = new google.visualization.Table(document.getElementById('table_div'));
	//	var table = new google.visualization.Table(document.getElementById('table_div'));

		console.log("about to draw the table inside drawTable()");
		table.draw(data, {
			showRowNumber: true,
			width: '100%',
			height: '100%'
		});
		console.log("done with drawing table");
	}
	*/



function DisplayLoadingMessage() {
	// console.log("DisplayingLoadingMessage");
	$.blockUI({ //using the iPhoto blocker from blockUI
		css: {
			border: 'none',
			padding: '15px',
			backgroundColor: '#000',
			'-webkit-border-radius': '10px',
			'-moz-border-radius': '10px',
			opacity: .9,
			color: '#fff'
		}
	});
	// drawTableOrChart();
	
	// console.log("calling google charts inside displaying loading message");
	GoogleChart();
	// console.log("done calling google charts inside displaying loading message");	
	// console.log("calling google table inside displaying loading message");	
	// GoogleTable();
	// console.log("done calling google table inside displaying loading message");	
	

	setTimeout($.unblockUI, 300);
	return;
}

	function GoogleChart() {
		var solution = $('#solution_param').val();
		var component = $('#component_param').val();
		var year = $('#yearparam_start').val();
		var month = $('#monthparam_start').val();

//		var temp_url = "http://localhost:8080/AjaxController/AjaxController/Report1/";
		var temp_url = new String(replace_url);
		temp_url += "Report1/";
//		http://usa0300lv312.apps.mc.xerox.com:8080/	
//		var temp_url = "http://usa0300lv312.apps.mc.xerox.com:8080/AjaxController/AjaxController/Report1/";
	
		temp_url += solution + "/";
		temp_url += component + "/";
		temp_url += year + "/";
		temp_url += month;

		// console.log("The url when you clicked on google is: " + temp_url);

		$.ajax({
			type: 'GET',
			dataType: 'json',
			url: temp_url,
			//	              contentType: "application/json; charset=utf-8",  
			//	              url: 'SecondColumn',  
			//	              data: { 'solution' : solution, 'component' : component,
			//	            	  	'year' : year, 'month' : month, 'getChartData' : "getChartData"},
			success: function(response) {
				drawchart(response); // calling method  
			},

			error: function() {
				alert("Error loading data! Please try again.");
			}
		});
	}





	function drawchart(dataValues) {
		// Callback that creates and populates a data table,  
		// instantiates the pie chart, passes in the data and  
		// draws it.  
		var data = new google.visualization.DataTable();

		data.addColumn('string', 'Date');
		data.addColumn('number', 'Request_Count');

		//            console.log("In DrawChart, about to loop through the elements");


		//			console.log("About to parse the json object");

		$.each(dataValues, function(k, v) {
			//				  console.log("Month is:" + v.month + " and request count is:" + v.request);
			//				  data.addRow([dataValues[k].month, parseInt(dataValues[k].request, 10)]);
			// console.log("Month is:" + v.DATE + " and request count is:" + v.REQUEST_COUNT);
			data.addRow([dataValues[k].DATE, parseInt(dataValues[k].REQUEST_COUNT, 10)]);
		});
		// Instantiate and draw our chart, passing in some options  
		var chart = new google.visualization.ColumnChart(document.getElementById('chartdiv'));

			// 'width': 1300,
			// 'height': 900,
		var options = {
			chartArea:{left:80,top:10,width:'80%',height:'80%'},
			'title': 'Request Count by Date',
			// 'width': 100%,
			// 'height': 100%,
			hAxis: {
				title: 'Date'
			},
			vAxis: {
				textPosition: 'in',
				logScale: true,
				title: 'Request Count',
				minValue: 0
			},
			animation: {
				easing: 'in',
				startup: true
			},
			legend: {
				position: 'bottom',
			}
		};

		chart.draw(data, options);
		/*
				chart.draw(data, {
					title: "Request Count by Date",
					position: "top",
					fontsize: "14px",
					chartArea: {
						width: '100%'
					},
				});
		*/
	}


	function update_comp() { //changed solution id, to update component param
		var solution = $('#solution_param').val();

		var $cp = $('#component_param');
		$cp.empty(); //clear out the select options
		$('#monthparam_start').empty();
		$('#yearparam_start').empty();

//		var temp_url = "http://localhost:8080/AjaxController/AjaxController/GenerateComponentList";
		var temp_url = new String(replace_url);
		temp_url += "GenerateComponentList";
		temp_url += "/";
		temp_url += solution;
		// console.log("When updating comp, the temp_url is:" + temp_url);


		$.ajax({
			url: temp_url,
			beforeSend: function() {
				$('#loading-solution-click').show();
			},
			type: 'GET',
			dataType: 'json',
			success: function(order) {
				if (jQuery.isEmptyObject(order)) { //returns true if it is empty
					$cp.append(new Option("No options", ""));
					$('#yearparam_start').empty();
					$('#monthparam_start').empty();
					$('#yearparam_start').append(new Option("No options", ""));
					$('#monthparam_start').append(new Option("No options", ""));
				} else {
					$cp.append(new Option("Please select an option", ""));
					$.each(order, function(key, value) {
						$cp.append($('<option>', {
							value: value
						}).text(value));
						/*
							$('#component_param')
							.append($('<option>', { value : value })
							.text(value)); 
							*/
					});
				} //end of else
			}, //end of success
			complete: function() {
				$('#loading-solution-click').hide();
			}
		});
		return false;
	}

	function update_year() { //this is helper function for when component param changes, update months and year

		var solution1 = $('#solution_param').val();
		var component1 = $('#component_param').val();
		var $start_year = $('#yearparam_start');

//		var temp_url = "http://localhost:8080/AjaxController/AjaxController/GenerateYearList";
		var temp_url = new String(replace_url);
		temp_url += "GenerateYearList";
		temp_url += "/";
		temp_url += solution1;
		temp_url += "/";
		temp_url += component1;
		//		console.log("temp_url in update_year() is:" + temp_url);
		// console.log("when updating year, the temp_url is:" + temp_url);

		$start_year.empty(); //clear out the year options
		$('#monthparam_start').empty(); //clear out the month options

		$.ajax({
			//			url: "SecondColumn",
			url: temp_url,
			beforeSend: function() {
				$('#loading-component-click').show(); //used to show the loading icon
			},
			type: 'GET',
			//	        contentType: "application/json; charset=utf-8",
			dataType: 'json',
			//			data: {'solution' : solution1, 'component' : component1, 'update_year' : "yes"},

			success: function(order) {
				if (jQuery.isEmptyObject(order)) { //checks to see whether there are valid years
					$('#yearparam_start').append(new Option("No options", ""));
					$('#monthparam_start').append(new Option("No options", ""));
				} else { //there are valid years!!
					//					$('#yearparam_start').append( new Option("Please select an option", ""));
					$start_year.append(new Option("Please select an option", ""));
					$.each(order, function(key, value) {
						$start_year.append($('<option>', {
							value: value
						}).text(value));
						//							$('#yearparam_start')
						//							.append($('<option>', { value : value })
						//							.text(value)); 
					});
				} //end of else
			}, //end of success
			complete: function() {
				$('#loading-component-click').hide(); //hide the loading element
			}
		});
		return false;
	}


	//update month, similar to the one above
	function update_month() { //this is helper function for when component param changes, update months and year

		var solution2 = $('#solution_param').val();
		var component2 = $('#component_param').val();
		var start_year2 = $('#yearparam_start').val();

//		var temp_url = "http://localhost:8080/AjaxController/AjaxController/GenerateMonthList";
		var temp_url = new String(replace_url);
		temp_url += "GenerateMonthList";
		temp_url += "/" + solution2;
		temp_url += "/" + component2;
		temp_url += "/" + start_year2;
		// console.log("when updating month, the temp_url is:" + temp_url);

		var $month = $('#monthparam_start');
		$month.empty(); //clear out the year options

		$.ajax({
			//			url: "SecondColumn",
			url: temp_url,
			beforeSend: function() {
				$('#loading-year-click').show();
			},
			type: 'GET',
			//	        contentType: "application/json; charset=utf-8",
			dataType: 'json',
			//			data: {'solution' : solution2, 'component' : component2, 'start_year' : start_year2, 'update_month' : "yes"},

			success: function(order) {
				$month.append(new Option("Please select an option", ""));
				$.each(order, function(key, value) {
					$month.append($('<option>', {
						value: value
					}).text(value));
					/*
						$('#monthparam_start')
						.append($('<option>', { value : value })
						.text(value)); 
						*/
				});
			},
			complete: function() {
				$('#loading-year-click').hide();
			}
		});
		return false;
	}

	//DISABLING AND ENABLING SUBMIT FORM
	/*
	function updateFormEnabled() { //disable or enable based on options
		if (verifyAdSettings()) {
			$('#submit_first').attr('disabled', false);
			$('#Google').attr('disabled', false);
		} else {
			$('#submit_first').attr('disabled', true);
			$('#Google').attr('disabled', true);

		}
	}
	*/

	function verifyAdSettings() { //checks to see whether or not the options are NULL
		if ($('#solution_param').val() != null && $('#component_param').val() != null && $('#monthparam_start').val() != null && $('#yearparam_start').val() != null

			&& $('#solution_param').val() != "" && $('#component_param').val() != "" && $('#monthparam_start').val() != "" && $('#yearparam_start').val() != ""
		) {
			//	    	console.log("solution param is:" + $('#solution_param').val());
			//	    	console.log("component param is:" + $('#component_param').val());
			//	    	console.log("month param is:" + $('#monthparam_start').val());
			//	    	console.log("year param is:" + $('#yearparam_start').val());

			return true;
		} else {
			return false;
		}
	}

	function loadSolutionList() {
		var $sp = $('#solution_param');
		$.ajax({

			beforeSend: function() {
				$('#loading-solution-click').show();
			},
			url: "http://localhost:8080/AjaxController/AjaxController/GenerateSolutionList",
			type: 'GET',
			dataType: 'json',
			success: function(order) {
				$sp.append(new Option("Please select an option", ""));
				$.each(order, function(key, value) {
					$sp.append($('<option>', {
						value: value
					}).text(value));
					/*
						$('#solution_param')
						.append($('<option>', { value : value })
						.text(value)); 
						*/
				});
			},
			complete: function() {
				$('#loading-solution-click').hide();
			}
		});
	}